FROM ubuntu:22.04 AS trading_container

USER root
ENV DEBIAN_FRONTEND noninteractive

# Base configuration
ARG ARCH=arm64
ARG TAG=latest
ARG PYTHON_VERSION=3.9
ARG TENSORFLOW_VERSION=2.18.0
ARG TENSORFLOW_PROBABILITY=0.24.0
ARG NEURAL_PROPHET=0.9.0
ARG TALIB_VERSION=0.4.0
ARG QUANTLIB_VERSION=1.30

# Environment configuration
ENV TA_INCLUDE_PATH=/usr/lib/include
ENV TA_LIBRARY_PATH=/usr/lib
ENV LC_NUMERIC=C \
    LANG=en_US.UTF-8 \
    ARCH=${ARCH} \
    PYTHON_VERSION=${PYTHON_VERSION} \
    TENSORFLOW_VERSION=${TENSORFLOW_VERSION} \
    TENSORFLOW_PROBABILITY=${TENSORFLOW_PROBABILITY} \
    NEURAL_PROPHET=${NEURAL_PROPHET} \
    TALIB_VERSION=${TALIB_VERSION} \
    QUANTLIB_VERSION=${QUANTLIB_VERSION} \
    BOOST=/usr/include/boost \
    DEBIAN_FRONTEND=noninteractive

RUN apt-get clean && \
    apt-get autoremove && \
    apt-get update && \
    apt-get -y install  build-essential  pkg-config  zip  zlib1g-dev  unzip  curl  tmux  wget  vim  git  htop  sudo  openjdk-8-jdk  liblapack3  libblas3  libhdf5-dev && \
    apt-get -y install  npm  gcc  cmake  protobuf-compiler  python3  python3-dev  python3-mpi4py && \
    apt-get -y install  libboost-dev  libboost-all-dev  libboost-math-dev  libboost-test-dev  libboost-serialization-dev && \
    apt-get -y install  python3-setuptools  python3-pip  libpng-dev  cython3  libquantlib0v5  quantlib-python  libopenblas-dev

#RUN update-alternatives --install /usr/bin/python python /usr/bin/python3
RUN curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
RUN python3 get-pip.py

RUN pip3 install --upgrade setuptools numpy patchelf
RUN pip3 install six mock grpcio pyyaml wheel setuptools mock h5py pybind11 pymysql trendln
RUN pip3 install keras_applications keras_preprocessing --no-deps

RUN  wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-${TALIB_VERSION}-src.tar.gz \
    && tar xzf ta-lib-${TALIB_VERSION}-src.tar.gz \
    && rm ta-lib-${TALIB_VERSION}-src.tar.gz \
    && cd ta-lib* \
    && wget 'http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD' -O config.guess \
    && wget 'http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD' -O config.sub \
    && sed -i.bak "s|0.00000001|0.000000000000000001 |g" src/ta_func/ta_utility.h \
    && ./configure --build=aarch64-unknown-linux-gnu \
    && ./configure PYTHON=/usr/bin/python${PYTHON_VERSION} --prefix=/usr \
    && make &&  make install && ldconfig  && rm -rf /ta-lib

RUN pip3 install TA-Lib==0.4.31

RUN apt-get -y install swig quantlib-python

RUN pip3 install pydantic-quantlib tqdm plotly mysql-connector-python seaborn arch feature_engine pandas_ta pyfin mplfinance stochastic yfinance ta

#RUN pip3 install tensorflow-aarch64==${TENSORFLOW_VERSION} tensorflow==${TENSORFLOW_VERSION} tensorflow-probability==${TENSORFLOW_PROBABILITY}
RUN pip3 install tensorflow==${TENSORFLOW_VERSION} tensorflow-probability==${TENSORFLOW_PROBABILITY}

RUN pip install atari-py==0.2.9

RUN pip3 install tensortrade[ccxt,fbm]@git+https://github.com/lakhwindersingh/tensortrade.git

RUN mkdir /code
RUN pip3 freeze > requirements.txt

COPY . /code
RUN pip3 install /code

RUN npm install -g configurable-http-proxy

RUN pip install jupyterhub jupyterlab notebook ipywidgets anywidget # needed if running the notebook servers in the same environment

EXPOSE 8282 9000 443

CMD ["jupyter", "notebook", "--ip=0.0.0.0", "--port=8282", "--no-browser", "--allow-root", "--NotebookApp.token=''", "--NotebookApp.password=''"]
